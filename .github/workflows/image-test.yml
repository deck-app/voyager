name: Voyager 

on:
  schedule:
  - cron:  '30 8,20 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Nginx-php8-laravel8-AMD64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image nginx, php 8.0 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 8
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/voya
        DATA_PATH_HOST: /tmp/db
    - name: PHP version check
      run:  docker exec voyager_voyager_1 php -v
    - name: Mongodb driver check
      run:  docker exec voyager_voyager_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec voyager_voyager_1 php -m | grep mysqli
    - name: Composer test
      run: docker exec voyager_voyager_1 composer
    - name: Application Install
      run:  |
        docker exec voyager_voyager_1 composer create-project --prefer-dist laravel/laravel:^8.0 
        docker exec voyager_voyager_1 cp /app/app.env /var/www/.env
        docker exec voyager_voyager_1 composer require tcg/voyager
    - name: Directory Permissions
      run:  docker exec voyager_voyager_1 chmod -R 777 storage
    - name: Root Path change
      run:  |
        docker exec voyager_voyager_1 cp /app/default.conf /etc/nginx/conf.d/default.conf
        docker exec voyager_voyager_1 pkill -9 php
        docker exec voyager_voyager_1 nginx -s reload
    - name: Root path check
      run: |
        docker exec voyager_voyager_1 ls -la
        docker exec voyager_voyager_1 cat /etc/nginx/conf.d/default.conf
    - name: Voyager application test
      run:  |
        curl -i http://localhost:53487/

    - name: Destroy container and file
      run:  |
        docker-compose down
        sudo rm -rf /tmp/db
        sudo rm -rf /tmp/voya
        echo "y" | docker image prune -a
  Nginx-php8-laravel8-ARM64:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image nginx, php 8.0 and laravel 8
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        LARAVEL_VERSION: 8
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/public
        APP_CODE_PATH_HOST: /tmp/voya
        DATA_PATH_HOST: /tmp/db
    - name: PHP version check
      run:  docker exec voyager_voyager_1 php -v
    - name: Mongodb driver check
      run:  docker exec voyager_voyager_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec voyager_voyager_1 php -m | grep mysqli
    - name: Composer test
      run: docker exec voyager_voyager_1 composer
    - name: Application Install
      run:  |
        docker exec voyager_voyager_1 composer create-project --prefer-dist laravel/laravel:^8.0 
        docker exec voyager_voyager_1 cp /app/app.env /var/www/.env
        docker exec voyager_voyager_1 composer require tcg/voyager
    - name: Directory Permissions
      run:  docker exec voyager_voyager_1 chmod -R 777 storage
    - name: Root Path change
      run:  |
        docker exec voyager_voyager_1 cp /app/default.conf /etc/nginx/conf.d/default.conf
        docker exec voyager_voyager_1 pkill -9 php
        docker exec voyager_voyager_1 nginx -s reload
    - name: Root path check
      run: |
        docker exec voyager_voyager_1 ls -la
        docker exec voyager_voyager_1 cat /etc/nginx/conf.d/default.conf
    - name: Voyager application test
      run:  |
        curl -i http://localhost:53487/

    - name: Destroy container and file
      run:  |
        docker-compose down
        sudo rm -rf /tmp/db
        sudo rm -rf /tmp/voya
        echo "y" | docker image prune -a

  # Nginx-php8-laravel7:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx, php 8.0 and laravel 7
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "8.0"
  #       LARAVEL_VERSION: 7
  #       BACK_END: nginx
  #       XDEBUG: true
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www/public
  #       APP_CODE_PATH_HOST: /tmp/voya
  #   - name: PHP version check
  #     run:  docker exec voyager_voyager_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec voyager_voyager_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec voyager_voyager_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec voyager_voyager_1 composer
  #   - name: Application Install
  #     run:  |
  #       docker exec voyager_voyager_1 composer create-project --prefer-dist laravel/laravel:^7.0
  #       docker exec voyager_voyager_1 cp /app/app.env /var/www/.env
  #       docker exec voyager_voyager_1 composer require tcg/voyager
  #   - name: Directory Permissions
  #     run:  docker exec voyager_voyager_1 chmod -R 777 storage
  #   - name: Root Path change
  #     run:  |
  #       docker exec voyager_voyager_1 cp /app/default.conf /etc/nginx/conf.d/default.conf
  #       docker exec voyager_voyager_1 pkill -9 php
  #       docker exec voyager_voyager_1 nginx -s reload
  #   - name: Root path check
  #     run: |
  #       docker exec voyager_voyager_1 ls -la
  #       docker exec voyager_voyager_1 cat /etc/nginx/conf.d/default.conf
  #   - name: Voyager application test
  #     run:  |
  #       curl -i http://localhost:53487/

  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       sudo rm -rf /tmp/voya
  
  # Nginx-php7-laravel8:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx, php 7.4 and laravel 8
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "7.4"
  #       LARAVEL_VERSION: 8
  #       BACK_END: nginx
  #       XDEBUG: true
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www/public
  #       APP_CODE_PATH_HOST: /tmp/voya
  #   - name: PHP version check
  #     run:  docker exec voyager_voyager_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec voyager_voyager_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec voyager_voyager_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec voyager_voyager_1 composer
  #   - name: Application Install
  #     run:  |
  #       docker exec voyager_voyager_1 composer create-project --prefer-dist laravel/laravel:^8.0
  #       docker exec voyager_voyager_1 cp /app/app.env /var/www/.env
  #       docker exec voyager_voyager_1 composer require tcg/voyager
  #   - name: Directory Permissions
  #     run:  docker exec voyager_voyager_1 chmod -R 777 storage
  #   - name: Root Path change
  #     run:  |
  #       docker exec voyager_voyager_1 cp /app/default.conf /etc/nginx/conf.d/default.conf
  #       docker exec voyager_voyager_1 pkill -9 php
  #       docker exec voyager_voyager_1 nginx -s reload
  #   - name: Root path check
  #     run: |
  #       docker exec voyager_voyager_1 ls -la
  #       docker exec voyager_voyager_1 cat /etc/nginx/conf.d/default.conf
  #   - name: Voyager application test
  #     run:  |
  #       curl -i http://localhost:53487/

  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       sudo rm -rf /tmp/voya

  # Nginx-php7-laravel7:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx, php 7.4 and laravel 7
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "7.4"
  #       LARAVEL_VERSION: 7
  #       BACK_END: nginx
  #       XDEBUG: true
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www/public
  #       APP_CODE_PATH_HOST: /tmp/voya
  #   - name: PHP version check
  #     run:  docker exec voyager_voyager_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec voyager_voyager_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec voyager_voyager_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec voyager_voyager_1 composer
  #   - name: Application Install
  #     run:  |
  #       docker exec voyager_voyager_1 composer create-project --prefer-dist laravel/laravel:^7.0
  #       docker exec voyager_voyager_1 cp /app/app.env /var/www/.env
  #       docker exec voyager_voyager_1 composer require tcg/voyager
  #   - name: Directory Permissions
  #     run:  docker exec voyager_voyager_1 chmod -R 777 storage
  #   - name: Root Path change
  #     run:  |
  #       docker exec voyager_voyager_1 cp /app/default.conf /etc/nginx/conf.d/default.conf
  #       docker exec voyager_voyager_1 pkill -9 php
  #       docker exec voyager_voyager_1 nginx -s reload
  #   - name: Root path check
  #     run: |
  #       docker exec voyager_voyager_1 ls -la
  #       docker exec voyager_voyager_1 cat /etc/nginx/conf.d/default.conf
  #   - name: Voyager application test
  #     run:  |
  #       curl -i http://localhost:53487/

  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       sudo rm -rf /tmp/voya


  # Apache-php8-laravel8:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image Apache, php 8.0 and laravel 8
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "8.0"
  #       LARAVEL_VERSION: 8
  #       BACK_END: apache
  #       XDEBUG: true
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www/public
  #       APP_CODE_PATH_HOST: /tmp/voya
  #   - name: PHP version check
  #     run:  docker exec voyager_voyager_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec voyager_voyager_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec voyager_voyager_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec voyager_voyager_1 composer
  #   - name: Application Install
  #     run:  |
  #       docker exec voyager_voyager_1 composer create-project --prefer-dist laravel/laravel:^8.0
  #       docker exec voyager_voyager_1 cp /app/app.env /var/www/.env
  #       docker exec voyager_voyager_1 composer require tcg/voyager
  #   - name: Directory Permissions
  #     run:  docker exec voyager_voyager_1 chown -R apache:apache storage
  #   - name: Documenty root change
  #     run:  |
  #       docker exec voyager_voyager_1 cp /app/httpd.conf /etc/apache2/httpd.conf
  #       docker exec voyager_voyager_1 httpd -k graceful
  #   - name: root path check
  #     run: |
  #       docker exec voyager_voyager_1 ls -la
  #       docker exec voyager_voyager_1 cat /etc/apache2/httpd.conf
  #   - name: Voyager application test
  #     run:  |
  #       curl -i http://localhost:53487/admin

  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       sudo rm -rf /tmp/voya

  # Apache-php8-laravel7:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image Apache, php 8.0 and laravel 7
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "8.0"
  #       LARAVEL_VERSION: 7
  #       BACK_END: apache
  #       XDEBUG: true
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www/public
  #       APP_CODE_PATH_HOST: /tmp/voya
  #   - name: PHP version check
  #     run:  docker exec voyager_voyager_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec voyager_voyager_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec voyager_voyager_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec voyager_voyager_1 composer
  #   - name: Application Install
  #     run:  |
  #       docker exec voyager_voyager_1 composer create-project --prefer-dist laravel/laravel:^7.0
  #       docker exec voyager_voyager_1 cp /app/app.env /var/www/.env
  #       docker exec voyager_voyager_1 composer require tcg/voyager
  #   - name: Directory Permissions
  #     run:  docker exec voyager_voyager_1 chown -R apache:apache storage
  #   - name: Root Path change
  #     run:  |
  #       docker exec voyager_voyager_1 cp /app/httpd.conf /etc/apache2/httpd.conf
  #       docker exec voyager_voyager_1 httpd -k graceful
  #   - name: Root path check
  #     run: |
  #       docker exec voyager_voyager_1 ls -la
  #       docker exec voyager_voyager_1 cat /etc/apache2/httpd.conf
  #   - name: Voyager application test
  #     run:  |
  #       curl -i http://localhost:53487/admin

  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       sudo rm -rf /tmp/voya
  
  # Apache-php7-laravel8:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image Apache, php 7.4 and laravel 8
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "7.4"
  #       LARAVEL_VERSION: 8
  #       BACK_END: apache
  #       XDEBUG: true
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www/public
  #       APP_CODE_PATH_HOST: /tmp/voya
  #   - name: PHP version check
  #     run:  docker exec voyager_voyager_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec voyager_voyager_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec voyager_voyager_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec voyager_voyager_1 composer
  #   - name: Application Install
  #     run:  |
  #       docker exec voyager_voyager_1 composer create-project --prefer-dist laravel/laravel:^8.0
  #       docker exec voyager_voyager_1 cp /app/app.env /var/www/.env
  #       docker exec voyager_voyager_1 composer require tcg/voyager
  #   - name: Directory Permissions
  #     run:  docker exec voyager_voyager_1 chown -R apache:apache storage
  #   - name: Root Path change
  #     run:  |
  #       docker exec voyager_voyager_1 cp /app/httpd.conf /etc/apache2/httpd.conf
  #       docker exec voyager_voyager_1 httpd -k graceful
  #   - name: Root path check
  #     run: |
  #       docker exec voyager_voyager_1 ls -la
  #       docker exec voyager_voyager_1 cat /etc/apache2/httpd.conf
  #   - name: Voyager application test
  #     run:  |
  #       curl -i http://localhost:53487/admin

  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       sudo rm -rf /tmp/voya

  # Apache-php7-laravel7:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image Apache, php 7.4 and laravel 7
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "7.4"
  #       LARAVEL_VERSION: 7
  #       BACK_END: apache
  #       XDEBUG: true
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www/public
  #       APP_CODE_PATH_HOST: /tmp/voya
  #   - name: PHP version check
  #     run:  docker exec voyager_voyager_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec voyager_voyager_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec voyager_voyager_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec voyager_voyager_1 composer
  #   - name: Application Install
  #     run:  |
  #       docker exec voyager_voyager_1 composer create-project --prefer-dist laravel/laravel:^7.0
  #       docker exec voyager_voyager_1 cp /app/app.env /var/www/.env
  #       docker exec voyager_voyager_1 composer require tcg/voyager
  #   - name: Directory Permissions
  #     run:  docker exec voyager_voyager_1 chown -R apache:apache storage
  #   - name: Root Path change
  #     run:  |
  #       docker exec voyager_voyager_1 cp /app/httpd.conf /etc/apache2/httpd.conf
  #       docker exec voyager_voyager_1 httpd -k graceful
  #   - name: Root path check
  #     run: |
  #       docker exec voyager_voyager_1 ls -la
  #       docker exec voyager_voyager_1 cat /etc/apache2/httpd.conf
  #   - name: Voyager application test
  #     run:  |
  #       curl -i http://localhost:53487/admin/

  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       sudo rm -rf /tmp/voya
    